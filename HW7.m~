%HW7

% Problem 1: Modeling population growth
% The simplest model for a growing population assumes that each current
% individual has equal likelihood to divide, which yields a differential
% equation dx/dt = a*x where a is the division rate. It is easy to see that
% this will grow exponentially without bound. A simple modification is to
% assume that the growth rate slows done as the population reaches some
% maximum value N so that dx/dt = a*x*(1-x/N). Defining X = x/N, we have 
% dX/dt = a*X*(1-X).  

% Part 1. This equation has two fixed points at 0 and 1. Explain the
% meaning of these two points.

%Miguel Angel: the zero points should mean that, when there is no
%population there can't be any division so that's why the whole equation
%will turn to zero. And the one point, is the maximum, because that's the
%limit the population can divide, after reaching that limit the division
%rate will stop because it will become 1-1 = 0.

% Part 2: Evaluate the stability of these fixed points. Does it depend on
% the value of the parameter a? 

f=@(a,x) a*x.*(1-x);
interval=(0:0.1:1);
result=f(1,interval); %when a =1 
figure (1); plot(interval,result);
title('When a = 1');

result=f(5,interval); %when a=5
figure (2); plot(interval,result);
title('When a = 5');

result=f(0.3,interval); %when a=0.3
figure (3); plot(interval,result);
title('when a = 0.3');

%from the graphs we can observe that -a- does have an impact due the fact
%that is the division rate, however the parabole remains the same due the
%dynamic of having a limit population. 

% Part 3: Write a function that takes two inputs - the initial condition x0
% and the a parameter and integrates the equation forward in time. Make
% your code return two variables - the timecourse of X and the time
% required for the population to reach 99% of its maximum value. 

[timer,xtimes]=h713(1,0.01); % first input is a, second input is xo.
timer %timer is the time required for getting 0.99 population
xtimes %xtimes is the timecourse of x

%a and xo cannot be zero, otherwise all will become zero and the function will
%throw an error. xo has to be more than zero but below 0.99, 'cause that is the goal, and the closer you get
%to one, the less time it will take to reach the 99% of population. 
 
% Part 4: Another possible model is to consider discrete generations
% instead allowing the population to vary continuously. e.g. X(t+1) = a*
% X(t)*(1-X(t)). Consider this model and vary the a parameter in the range 0
% < a <= 4. For each value of "a" choose 200 random starting points  0 < x0 < 1 
% and iterate the equation forward to steady state. For each final
% value Xf, plot the point in the plane (a,Xf) so that at the end you will
% have produced a bifucation diagram showing all possible final values of
% Xf at each value of a. Explain your results. 

%re arranging: X(t+1) = a*X(t)*(1-X(t)) to:
% x1=a.*x.*(1-(x))
% x2=a.*x1.*(1-(x1))

for a=0:0.2:4
for ii=1:200
xo=rand;
x1=a.*xo.*(1-(xo));
for jj=1:500
x2=a.*x1.*(1-(x1));
x3=a.*x2.*(1-(x2));
end
plot(a,x3, '.r'); hold on;
end
end

%Miguel Angel: the graph is telling us that "a" is the governing variable,
%because in the end, the only way to achieve the closest to 100% population
%is when "a" is 4, otherwise for example, when "a" is 3, tha maximum
%achievable population is 0.75 and we can also observe that sometimes the iteration
%doesn't result in an unique value, sometimes it loops between 2 values. 

% Problem 2. Genetic toggle switches. 
% Consider a genetic system of two genes A and B in which each gene
% product represses the expression of the other. Make the following
% assumptions: 
% a. Repression is cooperative:  each promotor region of one gene has 4
% binding sites for the other protein and that all of these need to be
% occupied for the gene to be repressed. 
% b. You can ignore the intermediate mRNA production so that the product of
% the synthesis of one gene can be assumed to directly repress the other
% c. the system is prefectly symmetric so that the degradation
% times, binding strengths etc are the same for both genes. 
% d. You can choose time and concentration scales so that all Michaelis
% binding constants and degradation times are equal to 1. 
%
% Part 1. Write down a two equation model (one for each gene product) for
% this system. Your model should have one free parameter corresponding to the
% maximum rate of expression of the gene, call it V. 

% a+b=4
% da/dt=0.25*b*t*v+1
% db/dt=0.25*a*t*v+1

% Part 2. Write code to integrate your model in time and plot the results for V = 5 for two cases, 
% one in which A0 > B0 and one in which B0 > A0. 
v=5;
A= @(t,b) (-0.25.*b.*t+1).*v;
B= @(t,a) (-0.25.*a.*t+1).*v;

%first case A0>B0
solA=ode23(A,[0 4],1);
solB=ode23(B,[0 4],3);
plot(solA.x,solA.y); hold on; plot(solB.x,solB.y);
xlabel('Time'); ylabel('Expression');
title('A blue,  B red');

%second case B0>A0
solA=ode23(A,[0 4],3);
solB=ode23(B,[0 4],1);
plot(solA.x,solA.y); hold on; plot(solB.x,solB.y);
xlabel('Time'); ylabel('Expression');
title('A blue,  B red');

% Part 3. By any means you want, write code to produce a bifurcation diagram showing all
% fixed points of the system as a function of the V parameter. 
figure; hold on;
a=01;
for b=0:0.05:3
    polycoeff=[1 -a 1 -b];
    rts=roots(polycoeff);
    rts=rts(imag(rts)==0);
    plot(b*ones(length(rts),1),rts,'.r');
end
hold off;
xlabel('b'); ylabel('fixed points for v');


